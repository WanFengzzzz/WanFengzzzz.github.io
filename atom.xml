<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://WanFengzzzz.github.io</id>
    <title>你好呀</title>
    <updated>2022-07-13T01:37:07.792Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://WanFengzzzz.github.io"/>
    <link rel="self" href="https://WanFengzzzz.github.io/atom.xml"/>
    <subtitle>日暮酒醒人已远,满天风雨下西楼</subtitle>
    <logo>https://WanFengzzzz.github.io/images/avatar.png</logo>
    <icon>https://WanFengzzzz.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 你好呀</rights>
    <entry>
        <title type="html"><![CDATA[啦啦啦啦啦啦啦]]></title>
        <id>https://WanFengzzzz.github.io/post/la-la-la-la-la-la-la/</id>
        <link href="https://WanFengzzzz.github.io/post/la-la-la-la-la-la-la/">
        </link>
        <updated>2022-07-12T13:05:17.000Z</updated>
        <content type="html"><![CDATA[<p>随便写写啦~~~~~~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算机网络-分层结构]]></title>
        <id>https://WanFengzzzz.github.io/post/penta-kill/</id>
        <link href="https://WanFengzzzz.github.io/post/penta-kill/">
        </link>
        <updated>2022-07-12T08:00:16.000Z</updated>
        <content type="html"><![CDATA[<p>网络体系结构<br>
实体<br>
第n层中的活动元素称为n层实体。同一层实体称为对等实体</p>
<p>协议<br>
为对等实体数据交换建立的规则、标准和约定。协议包括三部分：</p>
<p>语法：规定传输数据的格式<br>
语义：规定所要完成的功能<br>
同步：规定各种操作的顺序<br>
接口<br>
上层使用下层服务的入口</p>
<p>服务<br>
下层为相邻的上层提供的功能调整</p>
<p>OSI模型<br>
应用层(7)<br>
直接和用户交互产生流量的程序，典型服务包括</p>
<p>文件传输：FTP<br>
电子邮件：SMTP<br>
万维网：HTTP<br>
表示层(6)<br>
勇于处理在两个通信系统中交换信息的表示方式，其功能包括</p>
<p>数据格式变换<br>
数据加密解密<br>
数据压缩和恢复<br>
会话层(5)<br>
向表示层实体/用户进程提供建立连接并有序传输数据，也称建立同步(SYN)</p>
<p>建立、管理、终止会话<br>
使用校验点，当通信失效时从校验点/同步点恢复通信，实现数据同步<br>
传输层(4)<br>
负责主机中两个进程的通信，即端到端通信。传输单位是报文段或用户数据段</p>
<p>可靠传输、不可靠传输：对于大文件，将其切割为多个数据段，接收者必须回复确认信息才能收到下一个数据段，称为可靠传输。对于小文件，直接发送数据包而不需要确认，因此是不可靠连接<br>
差错控制：纠正传输过程中发送的乱序，丢失，错误<br>
流量控制：同步发送者和接收者的速率<br>
复用分用：多个进程可以同时使用传输层的服务，称为复用。传输层把收到的信息回复给应用层中不同的进程，称为分用<br>
网络层(3)<br>
把分组从源端传到目的端，传输单位是数据报，数据报过长时会被切割，可以实现不同主机间的互联</p>
<p>路由选择：选择最佳路由路径<br>
流量控制：同步发送者和接收者的速率<br>
差错控制：使用奇偶校验码等方式纠正错误或直接丢弃<br>
拥塞控制：控制整个网络中的拥挤状态<br>
数据链路层(2)<br>
把网络层传下来的数据报组装成帧，其传输单位是帧</p>
<p>成帧：定义帧的开始和结束<br>
差错控制： 丢弃或纠正差错帧<br>
流量控制：协调发送者和接收者的速率<br>
访问(接入)控制：在广播式网络中，控制同一时间只有一台主机能占用信道发送信息<br>
物理层(1)<br>
在物理媒体上实现比特流的透明传输</p>
<p>定义接口特性：定义连接方式等<br>
定义传输模式：单工(一段仅发送，一段仅接收)，半双工(双方都能发送和接收，但同时只有一方在发送)，双工(双方可以同时发送和接收)<br>
定义传输速率：规定传输速度<br>
比特同步：使用时钟保持比特相同<br>
比特编码：规定比特编码方式，如高电平表示1，低电平表示0<br>
TCP/IP模型<br>
应用层(4)<br>
HTTP，FTP，DNS。OSI的5,6,7层</p>
<p>传输层(3)<br>
TCP，UDP。OSI的4层</p>
<p>网际层(2)<br>
IP。OSI的3层</p>
<p>网络接口层(1)<br>
Ethernet，ATM，Frame Relay。OSI的1,2层</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[今天心情怎么样？]]></title>
        <id>https://WanFengzzzz.github.io/post/jin-tian-xin-qing-zen-me-yang/</id>
        <link href="https://WanFengzzzz.github.io/post/jin-tian-xin-qing-zen-me-yang/">
        </link>
        <updated>2022-07-12T06:48:10.000Z</updated>
        <content type="html"><![CDATA[<p>我今天比较开心吧！</p>
]]></content>
    </entry>
</feed>